<template>
  <div class="app-container">
    <el-card>
      <div class="filter-container">
        <el-button icon="el-icon-plus" v-permission="['${preName}:${nextName}:add']"  @click="tableCreate">新增</el-button>
      </div>

      <div class="table-container">
        <el-table ref="table" v-loading="table.loading" :data="table.data" style="width: 100%">
#foreach ($column in $columns)
          <el-table-column label="$column.comments">
            <template slot-scope="scope">
              <span>{{ scope.row.$column.lowerAttrName }}</span>
            </template>
          </el-table-column>
#end
          <el-table-column label="操作" align="center" width="105">
            <template slot-scope="scope">
              <el-button type="text" icon="el-icon-edit"  @click="tableEdit(scope.row)" />
              <el-button type="text" icon="el-icon-delete" v-permission="['${preName}:${nextName}:del']" @click="tableDelete(scope.row)" />
            </template>
          </el-table-column>
        </el-table>
        <div v-if="table.size !== -1" class="pagination-container">
          <el-pagination
              background
              :current-page.sync="table.current"
              :page-sizes="[6, 8, 10, 20, 30, 60, 80 ,100]"
              :page-size.sync="table.size"
              layout="total, sizes, prev, pager, next, jumper"
              :total="table.total"
              @size-change="(val) => {
                  ${Dollar}router.replace({
                    path: ${Dollar}route.path,
                    query: { page: ${Dollar}route.query.page ? ${Dollar}route.query.page : 1, pageSize: val }
                  })
                  tableGetPage()
              }"
              @current-change="(val) => {
                  ${Dollar}router.replace({
                    path: ${Dollar}route.path,
                    query: { page: val, pageSize: ${Dollar}route.query.pageSize ? ${Dollar}route.query.pageSize : 5 }
                  })
                  tableGetPage()
              }"
          />
        </div>
      </div>

      <el-dialog :append-to-body="true" :visible.sync="form.dialog" :title="form.data.${pk.columnName} === undefined ? '新增' : '编辑'" width="80%">
        <el-form ref="form" :model="form.data" :rules="form.rules" size="small" label-width="100px">

#foreach ($column in $columns)
              <el-form-item label="$column.comments" prop="$column.lowerAttrName">
                <el-input v-model="form.data.$column.lowerAttrName"></el-input>
              </el-form-item>
#end

        </el-form>

        <div slot="footer" class="dialog-footer">
          <el-button type="text" @click="form.dialog = false">取消</el-button>
          <el-button v-if="form.data.${pk.columnName} === undefined" v-permission="['${preName}:${nextName}:add']" :loading="table.loading" type="primary" @click="tableSubmit">确认创建</el-button>
          <el-button v-if="form.data.${pk.columnName} !== undefined" v-permission="['${preName}:${nextName}:update']" :loading="table.loading" type="primary" @click="tableSubmit">确认更新</el-button>
        </div>
      </el-dialog>
    </el-card>
  </div>
</template>
<script>
import {
${classname}Page,
${classname}Del,
${classname}Add,
${classname}Update
} from '@/api/${preName}/${classname}'
const _defaultRow = {
#foreach ($column in $columns)
  $column.lowerAttrName: undefined,
#end
}

    export default {
        name: '${className}',
        data() {
            return {
              table: {
                data: [],
                current: this.${Dollar}route.query.page ? Number.parseInt(this.${Dollar}route.query.page) : 1,
                size: this.${Dollar}route.query.pageSize ? Number.parseInt(this.${Dollar}route.query.pageSize) : 5,
                total: 0,
                loading: false
              },
              form: {
                data: Object.assign({}, _defaultRow),
                rules: {
#foreach ($column in $columns)
                  $column.lowerAttrName: [{ required: true, message: '不能为空', trigger: 'blur' }],
#end
                },
                dialog: false
              },
              dict: {},
            }
        },
      mounted() {
        this.tableGetPage()
      },
    methods: {
      tableCreate() {
        this.form.dialog = true
        this.form.data = Object.assign({}, _defaultRow)
      },
      tableDelete(row) {
        this.$confirm('此操作将删除选中数据, 是否继续?', '提示', { confirmButtonText: '确定', cancelButtonText: '取消', type: 'warning' }).then(() => {
          ${classname}Del([row.${pk.lowerAttrName}]).then(res => {
            if (res.code === 0) {
              this.tableGetPage()
            }
          })
        })
      },
      tableEdit(row) {
        this.form.dialog = true
        this.form.data = Object.assign({}, row)
      },
      tableGetPage() {
        this.table.loading = true
        const params = {
          current: this.table.current,
          size: this.table.size
        }
        ${classname}Page(params).then(response => {
          this.table.loading = false
          this.table.data = response.data.records
          this.table.total = response.data.total
        })
      },
      tableSubmit() {
        this.${Dollar}refs['form'].validate(valid => {
            if (valid) {
                if (this.form.data.${pk.columnName} === undefined) {
                ${classname}Add(this.form.data).then((res) => {
                    this.form.dialog = false
                    this.tableGetPage()
                    this.$refs['form'].resetFields()
                })
            } else {
                ${classname}Update(this.form.data).then((res) => {
                        this.form.dialog = false
                        this.tableGetPage()
                    })
                }
            }
        })
      }
    }
}
</script>

<style scoped>
  .filter-container {
    margin-top: 6px;
  }
  .tools-container {
    margin-top: 5px;
    margin-bottom: 15px;
  }
  .pagination-container {
    position: relative;
    float: right;
    margin: 20px 0;
  }
</style>

